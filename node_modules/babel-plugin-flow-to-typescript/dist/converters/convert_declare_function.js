"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const types_1 = require("@babel/types");
const convert_function_type_annotation_1 = require("./convert_function_type_annotation");
const baseNodeProps_1 = require("../utils/baseNodeProps");
function convertDeclareFunction(node) {
    if (!types_1.isTypeAnnotation(node.id.typeAnnotation))
        throw new Error('typeAnnotation is missing');
    const typeAnnotation = node.id.typeAnnotation.typeAnnotation;
    if (!types_1.isFunctionTypeAnnotation(typeAnnotation)) {
        throw new Error('typeAnnotation is not FunctionTypeAnnotation');
    }
    const { typeParams, parameters, returnType } = convert_function_type_annotation_1.convertFunctionTypeAnnotation(typeAnnotation);
    const id = Object.assign(Object.assign({}, types_1.identifier(node.id.name)), baseNodeProps_1.baseNodeProps(node.id));
    return types_1.tsDeclareFunction(id, typeParams, parameters, returnType);
}
exports.convertDeclareFunction = convertDeclareFunction;
//# sourceMappingURL=convert_declare_function.js.map