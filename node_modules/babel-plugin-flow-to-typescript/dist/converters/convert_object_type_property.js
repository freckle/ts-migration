"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const types_1 = require("@babel/types");
const convert_flow_type_1 = require("./convert_flow_type");
const baseNodeProps_1 = require("../utils/baseNodeProps");
const get_property_key_1 = require("./get_property_key");
function convertObjectTypeProperty(property) {
  let tsType;
  if (!types_1.isNullableTypeAnnotation(property.value)) {
    tsType = convert_flow_type_1.convertFlowType(property.value);
  } else {
    let tsValueT = convert_flow_type_1.convertFlowType(
      property.value.typeAnnotation
    );
    if (types_1.isTSFunctionType(tsValueT)) {
      tsValueT = types_1.tsParenthesizedType(tsValueT);
    }
    if (property.optional) {
      // { key?: ?T } -> { key?: T | null }
      tsType = types_1.tsUnionType([tsValueT, types_1.tsNullKeyword()]);
    } else {
      // { key: ?T } -> { key: T | null | undefined }
      tsType = types_1.tsUnionType([
        tsValueT,
        types_1.tsUndefinedKeyword(),
        types_1.tsNullKeyword()
      ]);
    }
  }
  const { key, isComputed } = get_property_key_1.getPropertyKey(property);
  if (property.method) {
    if (!types_1.isTSFunctionType(tsType)) {
      throw new Error("incorrect method declaration");
    }
    const tsMethod = types_1.tsMethodSignature(
      key,
      tsType.typeParameters,
      tsType.parameters,
      tsType.typeAnnotation
    );
    tsMethod.optional = property.optional;
    tsMethod.computed = isComputed;
    return tsMethod;
  } else {
    const tsPropSignature = types_1.tsPropertySignature(
      key,
      types_1.tsTypeAnnotation(
        Object.assign(
          Object.assign({}, tsType),
          baseNodeProps_1.baseNodeProps(property.value)
        )
      )
    );
    tsPropSignature.optional = property.optional;
    tsPropSignature.readonly =
      property.variance && property.variance.kind === "plus";
    tsPropSignature.computed = isComputed;
    return tsPropSignature;
  }
}
exports.convertObjectTypeProperty = convertObjectTypeProperty;
//# sourceMappingURL=convert_object_type_property.js.map
