"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const types_1 = require("@babel/types");
const convert_flow_type_1 = require("./convert_flow_type");
const convert_function_type_annotation_1 = require("./convert_function_type_annotation");
const baseNodeProps_1 = require("../utils/baseNodeProps");
function convertObjectTypeInternalSlot(property) {
    if (property.method) {
        if (!types_1.isFunctionTypeAnnotation(property.value)) {
            throw new Error('FunctionTypeAnnotation expected');
        }
        const { typeParams, parameters, returnType } = convert_function_type_annotation_1.convertFunctionTypeAnnotation(property.value);
        const methodSignature = types_1.tsMethodSignature(property.id, typeParams, parameters, returnType);
        methodSignature.computed = true;
        methodSignature.optional = property.optional;
        return methodSignature;
    }
    else {
        const tsPropSignature = types_1.tsPropertySignature(property.id, types_1.tsTypeAnnotation(Object.assign(Object.assign({}, convert_flow_type_1.convertFlowType(property.value)), baseNodeProps_1.baseNodeProps(property.value))));
        tsPropSignature.optional = property.optional;
        tsPropSignature.computed = true;
        // todo: property.static;
        return tsPropSignature;
    }
}
exports.convertObjectTypeInternalSlot = convertObjectTypeInternalSlot;
//# sourceMappingURL=convert_object_type_internal_slot.js.map