"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const types_1 = require("@babel/types");
const baseNodeProps_1 = require("../utils/baseNodeProps");
const replaceWith_1 = require("../utils/replaceWith");
exports.default = {
    enter(path, state) {
        state.set('isModuleDeclaration', true);
        const node = path.node;
        const moduleBlock = Object.assign(Object.assign({}, types_1.tsModuleBlock(node.body.body)), baseNodeProps_1.baseNodeProps(node.body));
        let id = node.id;
        if (types_1.isIdentifier(node.id)) {
            // it is not documented, but looking at lib/react.js in flow sources
            // it looks - "declare module react {}" should be identical to "declare module 'react' {}"
            id = types_1.stringLiteral(node.id.name);
        }
        const replacement = types_1.tsModuleDeclaration(id, moduleBlock);
        replacement.declare = true;
        replaceWith_1.replaceWith(path, replacement);
    },
    exit(_, state) {
        state.set('isModuleDeclaration', false);
    },
};
//# sourceMappingURL=declare_module.js.map